// <auto-generated />
using System;
using DumpDrive.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DumpDrive.Data.Migrations
{
    [DbContext(typeof(DumpDriveDbContext))]
    [Migration("20250102183546_InitialMigratio")]
    partial class InitialMigratio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("CommentId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            Content = "Komentar 1",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(3127),
                            ItemId = 15,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            Content = "Komentar 2",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(3937),
                            ItemId = 16,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 3,
                            Content = "Komentar 3",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(3939),
                            ItemId = 17,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 4,
                            Content = "Komentar 4",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(3940),
                            ItemId = 18,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 5,
                            Content = "Komentar 5",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(3998),
                            ItemId = 19,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 6,
                            Content = "Komentar 6",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4003),
                            ItemId = 20,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 7,
                            Content = "Komentar 7",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4004),
                            ItemId = 21,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 8,
                            Content = "Komentar 8",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4006),
                            ItemId = 22,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 9,
                            Content = "Komentar 9",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4007),
                            ItemId = 23,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 10,
                            Content = "Komentar 10",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4009),
                            ItemId = 24,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 11,
                            Content = "Komentar 11",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4011),
                            ItemId = 25,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 12,
                            Content = "Komentar 12",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4012),
                            ItemId = 26,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 13,
                            Content = "Komentar 13",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4014),
                            ItemId = 27,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 14,
                            Content = "Komentar 14",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4015),
                            ItemId = 28,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 15,
                            Content = "Komentar 15",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4017),
                            ItemId = 29,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 16,
                            Content = "Komentar 16",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4018),
                            ItemId = 15,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 17,
                            Content = "Komentar 17",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4019),
                            ItemId = 16,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 18,
                            Content = "Komentar 18",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4022),
                            ItemId = 17,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 19,
                            Content = "Komentar 19",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4023),
                            ItemId = 18,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 20,
                            Content = "Komentar 20",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4025),
                            ItemId = 19,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 21,
                            Content = "Komentar 21",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4026),
                            ItemId = 20,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 22,
                            Content = "Komentar 22",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4027),
                            ItemId = 21,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 23,
                            Content = "Komentar 23",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4029),
                            ItemId = 22,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 24,
                            Content = "Komentar 24",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4030),
                            ItemId = 23,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 25,
                            Content = "Komentar 25",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4032),
                            ItemId = 24,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 26,
                            Content = "Komentar 26",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4033),
                            ItemId = 25,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 27,
                            Content = "Komentar 27",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4034),
                            ItemId = 26,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 28,
                            Content = "Komentar 28",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4036),
                            ItemId = 27,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 29,
                            Content = "Komentar 29",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4037),
                            ItemId = 28,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 30,
                            Content = "Komentar 30",
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(4038),
                            ItemId = 29,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DDrive", b =>
                {
                    b.Property<int>("DriveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DriveId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("DriveId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Drives");

                    b.HasData(
                        new
                        {
                            DriveId = 1,
                            Name = "Lukin-disk",
                            UserId = 1
                        },
                        new
                        {
                            DriveId = 2,
                            Name = "Antin-disk",
                            UserId = 2
                        },
                        new
                        {
                            DriveId = 3,
                            Name = "Matin-disk",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DriveId")
                        .HasColumnType("integer");

                    b.Property<string>("Item_type")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<DateTime?>("LastChangedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentFolderId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentFolderItemId")
                        .HasColumnType("integer");

                    b.HasKey("ItemId");

                    b.HasIndex("DriveId");

                    b.HasIndex("ParentFolderId");

                    b.HasIndex("ParentFolderItemId");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Item_type").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.SharedItem", b =>
                {
                    b.Property<int>("SharedItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SharedItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("SharedItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("SharedItems");

                    b.HasData(
                        new
                        {
                            SharedItemId = 1,
                            ItemId = 15,
                            ItemName = "domaci.docx",
                            UserId = 1
                        },
                        new
                        {
                            SharedItemId = 2,
                            ItemId = 16,
                            ItemName = "predavanje.txt",
                            UserId = 2
                        },
                        new
                        {
                            SharedItemId = 3,
                            ItemId = 17,
                            ItemName = "preza.pdf",
                            UserId = 3
                        },
                        new
                        {
                            SharedItemId = 4,
                            ItemId = 18,
                            ItemName = "osobni-dokument.docx",
                            UserId = 1
                        },
                        new
                        {
                            SharedItemId = 5,
                            ItemId = 19,
                            ItemName = "Review.txt",
                            UserId = 2
                        },
                        new
                        {
                            SharedItemId = 6,
                            ItemId = 20,
                            ItemName = "Recepti.docx",
                            UserId = 3
                        },
                        new
                        {
                            SharedItemId = 7,
                            ItemId = 21,
                            ItemName = "notes.txt",
                            UserId = 1
                        },
                        new
                        {
                            SharedItemId = 8,
                            ItemId = 22,
                            ItemName = "summary.pdf",
                            UserId = 2
                        },
                        new
                        {
                            SharedItemId = 9,
                            ItemId = 23,
                            ItemName = "picture.jpg",
                            UserId = 3
                        },
                        new
                        {
                            SharedItemId = 10,
                            ItemId = 24,
                            ItemName = "tasklist.docx",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DriveId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 125, DateTimeKind.Utc).AddTicks(8620),
                            DriveId = 1,
                            Email = "luka@gmail.com",
                            Name = "Luka",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 125, DateTimeKind.Utc).AddTicks(9953),
                            DriveId = 2,
                            Email = "ante@gmail.com",
                            Name = "Anto",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 125, DateTimeKind.Utc).AddTicks(9957),
                            DriveId = 3,
                            Email = "mate@gmail.com",
                            Name = "Ana",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Files", b =>
                {
                    b.HasBaseType("DumpDrive.Data.Entities.Models.Item");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("File");

                    b.HasData(
                        new
                        {
                            ItemId = 15,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(1917),
                            DriveId = 1,
                            Name = "domaci.docx",
                            ParentFolderId = 1,
                            Content = "Content for Dump Domaci Notes"
                        },
                        new
                        {
                            ItemId = 16,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2185),
                            DriveId = 1,
                            Name = "predavanje.txt",
                            ParentFolderId = 2,
                            Content = "Content for Fesb Predavanja Slides"
                        },
                        new
                        {
                            ItemId = 17,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2187),
                            DriveId = 1,
                            Name = "preza.pdf",
                            ParentFolderId = 3,
                            Content = "Content for Web Programiranje Code"
                        },
                        new
                        {
                            ItemId = 18,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2188),
                            DriveId = 1,
                            Name = "osobni-dokument.docx",
                            ParentFolderId = 5,
                            Content = "Content for Personal Documents"
                        },
                        new
                        {
                            ItemId = 19,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2216),
                            DriveId = 1,
                            Name = "Review.txt",
                            Content = "Review"
                        },
                        new
                        {
                            ItemId = 20,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2220),
                            DriveId = 1,
                            Name = "Recepti.docx",
                            Content = "Content for Recepti"
                        },
                        new
                        {
                            ItemId = 21,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2221),
                            DriveId = 1,
                            Name = "notes.txt",
                            ParentFolderId = 2,
                            Content = "Class notes"
                        },
                        new
                        {
                            ItemId = 22,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2223),
                            DriveId = 1,
                            Name = "summary.pdf",
                            ParentFolderId = 6,
                            Content = "Project summary"
                        },
                        new
                        {
                            ItemId = 23,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2225),
                            DriveId = 1,
                            Name = "picture-description.txt",
                            ParentFolderId = 4,
                            Content = "A random picture"
                        },
                        new
                        {
                            ItemId = 24,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2228),
                            DriveId = 1,
                            Name = "tasklist.docx",
                            ParentFolderId = 9,
                            Content = "List of tasks"
                        },
                        new
                        {
                            ItemId = 25,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2229),
                            DriveId = 2,
                            Name = "thesis.docx",
                            ParentFolderId = 10,
                            Content = "Thesis draft"
                        },
                        new
                        {
                            ItemId = 26,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2231),
                            DriveId = 3,
                            Name = "system-notes.txt",
                            ParentFolderId = 11,
                            Content = "Notes on OS"
                        },
                        new
                        {
                            ItemId = 27,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2233),
                            DriveId = 3,
                            Name = "linux-guide.pdf",
                            ParentFolderId = 12,
                            Content = "Linux guide"
                        },
                        new
                        {
                            ItemId = 28,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2235),
                            DriveId = 3,
                            Name = "windows-faq.docx",
                            ParentFolderId = 13,
                            Content = "Windows FAQ"
                        },
                        new
                        {
                            ItemId = 29,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(2236),
                            DriveId = 3,
                            Name = "study-plan.txt",
                            ParentFolderId = 14,
                            Content = "Plan for studying"
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.HasBaseType("DumpDrive.Data.Entities.Models.Item");

                    b.HasDiscriminator().HasValue("Folder");

                    b.HasData(
                        new
                        {
                            ItemId = 2,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 126, DateTimeKind.Utc).AddTicks(9929),
                            DriveId = 1,
                            Name = "Fesb-predavanja"
                        },
                        new
                        {
                            ItemId = 3,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(588),
                            DriveId = 1,
                            Name = "Web-prog",
                            ParentFolderId = 2
                        },
                        new
                        {
                            ItemId = 4,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(915),
                            DriveId = 1,
                            Name = "Slike"
                        },
                        new
                        {
                            ItemId = 1,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(918),
                            DriveId = 1,
                            Name = "Moje slike",
                            ParentFolderId = 4
                        },
                        new
                        {
                            ItemId = 5,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(920),
                            DriveId = 1,
                            Name = "Dokumenti"
                        },
                        new
                        {
                            ItemId = 6,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(937),
                            DriveId = 1,
                            Name = "Projektni-zadaci",
                            ParentFolderId = 2
                        },
                        new
                        {
                            ItemId = 7,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(939),
                            DriveId = 2,
                            Name = "Recepti"
                        },
                        new
                        {
                            ItemId = 8,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(941),
                            DriveId = 2,
                            Name = "Svasta"
                        },
                        new
                        {
                            ItemId = 9,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(942),
                            DriveId = 2,
                            Name = "Projekti"
                        },
                        new
                        {
                            ItemId = 10,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(945),
                            DriveId = 2,
                            Name = "Zavrsni-rad",
                            ParentFolderId = 9
                        },
                        new
                        {
                            ItemId = 11,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(947),
                            DriveId = 3,
                            Name = "Operacijski-sustavi"
                        },
                        new
                        {
                            ItemId = 12,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(948),
                            DriveId = 3,
                            Name = "Linux",
                            ParentFolderId = 11
                        },
                        new
                        {
                            ItemId = 13,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(950),
                            DriveId = 3,
                            Name = "Windows",
                            ParentFolderId = 11
                        },
                        new
                        {
                            ItemId = 14,
                            CreatedAt = new DateTime(2025, 1, 2, 18, 35, 46, 127, DateTimeKind.Utc).AddTicks(952),
                            DriveId = 3,
                            Name = "Folder-za-faks"
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Comment", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.Item", "Item")
                        .WithMany("Comments")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DDrive", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.User", "User")
                        .WithOne("Drive")
                        .HasForeignKey("DumpDrive.Data.Entities.Models.DDrive", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Item", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.DDrive", "Drive")
                        .WithMany("Items")
                        .HasForeignKey("DriveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.Folder", null)
                        .WithMany("Items")
                        .HasForeignKey("ParentFolderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DumpDrive.Data.Entities.Models.Folder", "ParentFolder")
                        .WithMany()
                        .HasForeignKey("ParentFolderItemId");

                    b.Navigation("Drive");

                    b.Navigation("ParentFolder");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.SharedItem", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.User", "User")
                        .WithMany("SharedItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DDrive", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Item", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Drive")
                        .IsRequired();

                    b.Navigation("SharedItems");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
