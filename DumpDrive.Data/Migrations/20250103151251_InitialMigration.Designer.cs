// <auto-generated />
using System;
using DumpDrive.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DumpDrive.Data.Migrations
{
    [DbContext(typeof(DumpDriveDbContext))]
    [Migration("20250103151251_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("CommentId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            Content = "Comm 1",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6006),
                            ItemId = 15,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            Content = "Comm 2",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6973),
                            ItemId = 16,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 3,
                            Content = "Comm 3",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6975),
                            ItemId = 17,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 4,
                            Content = "Comm 4",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6977),
                            ItemId = 18,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 5,
                            Content = "Comm 5",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6978),
                            ItemId = 19,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 6,
                            Content = "Comm 6",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6982),
                            ItemId = 20,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 7,
                            Content = "Comm 7",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6983),
                            ItemId = 21,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 8,
                            Content = "Comm 8",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6984),
                            ItemId = 22,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 9,
                            Content = "Comm 9",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6986),
                            ItemId = 23,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 10,
                            Content = "Comm 10",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6988),
                            ItemId = 24,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 11,
                            Content = "Comm 11",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6989),
                            ItemId = 25,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 12,
                            Content = "Comm 12",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6991),
                            ItemId = 26,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 13,
                            Content = "Comm 13",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6992),
                            ItemId = 27,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 14,
                            Content = "Comm 14",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6993),
                            ItemId = 28,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 15,
                            Content = "Comm 15",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6995),
                            ItemId = 29,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 16,
                            Content = "Comm 16",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6996),
                            ItemId = 15,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 17,
                            Content = "Comm 17",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(6997),
                            ItemId = 16,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 18,
                            Content = "Comm 18",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7000),
                            ItemId = 17,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 19,
                            Content = "Comm 19",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7001),
                            ItemId = 18,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 20,
                            Content = "Comm 20",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7002),
                            ItemId = 19,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 21,
                            Content = "Comm 21",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7004),
                            ItemId = 20,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 22,
                            Content = "Comm 22",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7005),
                            ItemId = 21,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 23,
                            Content = "Comm 23",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7007),
                            ItemId = 22,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 24,
                            Content = "Comm 24",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7008),
                            ItemId = 23,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 25,
                            Content = "Comm 25",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7009),
                            ItemId = 24,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 26,
                            Content = "Comm 26",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7011),
                            ItemId = 25,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 27,
                            Content = "Comm 27",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7012),
                            ItemId = 26,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 28,
                            Content = "Comm 28",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7013),
                            ItemId = 27,
                            UserId = 1
                        },
                        new
                        {
                            CommentId = 29,
                            Content = "Comm 29",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7014),
                            ItemId = 28,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 30,
                            Content = "Comm 30",
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(7016),
                            ItemId = 29,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DDrive", b =>
                {
                    b.Property<int>("DriveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DriveId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("DriveId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Drives");

                    b.HasData(
                        new
                        {
                            DriveId = 1,
                            Name = "Marko-drive",
                            UserId = 1
                        },
                        new
                        {
                            DriveId = 2,
                            Name = "Jure-drive",
                            UserId = 2
                        },
                        new
                        {
                            DriveId = 3,
                            Name = "Ana-drive",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DriveId")
                        .HasColumnType("integer");

                    b.Property<string>("Item_type")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<DateTime?>("LastChangedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentFolderId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentFolderItemId")
                        .HasColumnType("integer");

                    b.HasKey("ItemId");

                    b.HasIndex("DriveId");

                    b.HasIndex("ParentFolderId");

                    b.HasIndex("ParentFolderItemId");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Item_type").HasValue("Item");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.SharedItem", b =>
                {
                    b.Property<int>("SharedItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SharedItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("SharedItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("SharedItems");

                    b.HasData(
                        new
                        {
                            SharedItemId = 1,
                            ItemId = 15,
                            ItemName = "file15.docx",
                            UserId = 1
                        },
                        new
                        {
                            SharedItemId = 2,
                            ItemId = 16,
                            ItemName = "file5.txt",
                            UserId = 2
                        },
                        new
                        {
                            SharedItemId = 3,
                            ItemId = 17,
                            ItemName = "file8.pdf",
                            UserId = 3
                        },
                        new
                        {
                            SharedItemId = 4,
                            ItemId = 18,
                            ItemName = "file10.docx",
                            UserId = 1
                        },
                        new
                        {
                            SharedItemId = 5,
                            ItemId = 19,
                            ItemName = "file7.txt",
                            UserId = 2
                        },
                        new
                        {
                            SharedItemId = 6,
                            ItemId = 20,
                            ItemName = "file11.docx",
                            UserId = 3
                        },
                        new
                        {
                            SharedItemId = 7,
                            ItemId = 21,
                            ItemName = "file12.txt",
                            UserId = 1
                        },
                        new
                        {
                            SharedItemId = 8,
                            ItemId = 22,
                            ItemName = "file13.pdf",
                            UserId = 2
                        },
                        new
                        {
                            SharedItemId = 9,
                            ItemId = 23,
                            ItemName = "file16.txt",
                            UserId = 3
                        },
                        new
                        {
                            SharedItemId = 10,
                            ItemId = 24,
                            ItemName = "file6.docx",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DriveId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 305, DateTimeKind.Utc).AddTicks(734),
                            DriveId = 1,
                            Email = "marko@gmail.com",
                            Name = "Marko",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 305, DateTimeKind.Utc).AddTicks(2077),
                            DriveId = 2,
                            Email = "jure@gmail.com",
                            Name = "Jure",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 305, DateTimeKind.Utc).AddTicks(2082),
                            DriveId = 3,
                            Email = "ana@gmail.com",
                            Name = "Ana",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Files", b =>
                {
                    b.HasBaseType("DumpDrive.Data.Entities.Models.Item");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("File");

                    b.HasData(
                        new
                        {
                            ItemId = 15,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(4755),
                            DriveId = 1,
                            Name = "file1.docx",
                            ParentFolderId = 1,
                            Content = "Content file1"
                        },
                        new
                        {
                            ItemId = 16,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5041),
                            DriveId = 1,
                            Name = "file2.txt",
                            ParentFolderId = 2,
                            Content = "Content file2"
                        },
                        new
                        {
                            ItemId = 17,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5044),
                            DriveId = 1,
                            Name = "file3.pdf",
                            ParentFolderId = 3,
                            Content = "Content file3"
                        },
                        new
                        {
                            ItemId = 18,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5087),
                            DriveId = 1,
                            Name = "file4.docx",
                            ParentFolderId = 5,
                            Content = "Content file4"
                        },
                        new
                        {
                            ItemId = 19,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5088),
                            DriveId = 1,
                            Name = "file5.txt",
                            Content = "Content file5"
                        },
                        new
                        {
                            ItemId = 20,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5092),
                            DriveId = 1,
                            Name = "file6.docx",
                            Content = "Content file6"
                        },
                        new
                        {
                            ItemId = 21,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5093),
                            DriveId = 1,
                            Name = "file7.txt",
                            ParentFolderId = 2,
                            Content = "Content file7"
                        },
                        new
                        {
                            ItemId = 22,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5095),
                            DriveId = 1,
                            Name = "file8.pdf",
                            ParentFolderId = 6,
                            Content = "Content file8"
                        },
                        new
                        {
                            ItemId = 23,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5096),
                            DriveId = 1,
                            Name = "file9.txt",
                            ParentFolderId = 4,
                            Content = "Content file9"
                        },
                        new
                        {
                            ItemId = 24,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5099),
                            DriveId = 1,
                            Name = "file10.docx",
                            ParentFolderId = 9,
                            Content = "Content file10"
                        },
                        new
                        {
                            ItemId = 25,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5101),
                            DriveId = 2,
                            Name = "file11.docx",
                            ParentFolderId = 10,
                            Content = "Content file11"
                        },
                        new
                        {
                            ItemId = 26,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5103),
                            DriveId = 3,
                            Name = "file12.txt",
                            ParentFolderId = 11,
                            Content = "Content file12"
                        },
                        new
                        {
                            ItemId = 27,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5104),
                            DriveId = 3,
                            Name = "file13.pdf",
                            ParentFolderId = 12,
                            Content = "Content file13"
                        },
                        new
                        {
                            ItemId = 28,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5106),
                            DriveId = 3,
                            Name = "file15.docx",
                            ParentFolderId = 13,
                            Content = "Content file15"
                        },
                        new
                        {
                            ItemId = 29,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(5108),
                            DriveId = 3,
                            Name = "file16.txt",
                            ParentFolderId = 14,
                            Content = "Content file16"
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.HasBaseType("DumpDrive.Data.Entities.Models.Item");

                    b.HasDiscriminator().HasValue("Folder");

                    b.HasData(
                        new
                        {
                            ItemId = 2,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(2688),
                            DriveId = 1,
                            Name = "Docs"
                        },
                        new
                        {
                            ItemId = 3,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3445),
                            DriveId = 1,
                            Name = "Pictures",
                            ParentFolderId = 2
                        },
                        new
                        {
                            ItemId = 4,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3685),
                            DriveId = 1,
                            Name = "Videos"
                        },
                        new
                        {
                            ItemId = 1,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3686),
                            DriveId = 1,
                            Name = "Oldies",
                            ParentFolderId = 4
                        },
                        new
                        {
                            ItemId = 5,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3688),
                            DriveId = 1,
                            Name = "Projects"
                        },
                        new
                        {
                            ItemId = 6,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3706),
                            DriveId = 1,
                            Name = "Tasks",
                            ParentFolderId = 2
                        },
                        new
                        {
                            ItemId = 7,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3708),
                            DriveId = 2,
                            Name = "Google"
                        },
                        new
                        {
                            ItemId = 8,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3709),
                            DriveId = 2,
                            Name = "Firefox"
                        },
                        new
                        {
                            ItemId = 9,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3711),
                            DriveId = 2,
                            Name = "Debian"
                        },
                        new
                        {
                            ItemId = 10,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3713),
                            DriveId = 2,
                            Name = "Git",
                            ParentFolderId = 9
                        },
                        new
                        {
                            ItemId = 11,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3715),
                            DriveId = 3,
                            Name = "Folder"
                        },
                        new
                        {
                            ItemId = 12,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3716),
                            DriveId = 3,
                            Name = "Folder1",
                            ParentFolderId = 11
                        },
                        new
                        {
                            ItemId = 13,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3718),
                            DriveId = 3,
                            Name = "Folder2",
                            ParentFolderId = 11
                        },
                        new
                        {
                            ItemId = 14,
                            CreatedAt = new DateTime(2025, 1, 3, 15, 12, 50, 306, DateTimeKind.Utc).AddTicks(3720),
                            DriveId = 3,
                            Name = "Folder3"
                        });
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Comment", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.Item", "Item")
                        .WithMany("Comments")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DDrive", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.User", "User")
                        .WithOne("Drive")
                        .HasForeignKey("DumpDrive.Data.Entities.Models.DDrive", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Item", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.DDrive", "Drive")
                        .WithMany("Items")
                        .HasForeignKey("DriveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.Folder", null)
                        .WithMany("Items")
                        .HasForeignKey("ParentFolderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DumpDrive.Data.Entities.Models.Folder", "ParentFolder")
                        .WithMany()
                        .HasForeignKey("ParentFolderItemId");

                    b.Navigation("Drive");

                    b.Navigation("ParentFolder");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.SharedItem", b =>
                {
                    b.HasOne("DumpDrive.Data.Entities.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DumpDrive.Data.Entities.Models.User", "User")
                        .WithMany("SharedItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.DDrive", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Item", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Drive")
                        .IsRequired();

                    b.Navigation("SharedItems");
                });

            modelBuilder.Entity("DumpDrive.Data.Entities.Models.Folder", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
